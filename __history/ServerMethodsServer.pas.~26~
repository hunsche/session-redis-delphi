unit ServerMethodsServer;

interface

uses System.SysUtils, System.Classes, Datasnap.DSServer, Datasnap.DSAuth;

type
{$METHODINFO ON}
  TServerMethods1 = class(TComponent)
  private
    { Private declarations }
  public
    { Public declarations }
    function updateEmpresa(ID: Integer): string;
    function EchoString(Value: string): string;
    function ReverseString(Value: string): string;
  end;
{$METHODINFO OFF}

implementation


uses System.StrUtils, Redis.Client, Vcl.Dialogs;

function TServerMethods1.EchoString(Value: string): string;
begin
  Result := Value;
end;

function TServerMethods1.ReverseString(Value: string): string;
begin
  Result := System.StrUtils.ReverseString(Value);
end;
function TServerMethods1.updateEmpresa(ID: Integer): string;
var
  ARedis: TRedisClient;
begin
  ARedis := TRedisClient.Create('192.168.99.100', 32768);
  ARedis.Connect;
  if ARedis.GET(ID.ToString).IsNull then
    ARedis.&SET(ID.ToString, 'lalalalala')
  else
    ShowMessage(ARedis.GET(ID.ToString).Value);
  result := 'empresa alterada para ' + ID.ToString;
end;

end.

